{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/images/hello-bg.png","path":"images/hello-bg.png","modified":0,"renderable":0},{"_id":"themes/archer/source/assets/algolia_logo.svg","path":"assets/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/beian.png","path":"assets/beian.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/example_qr.png","path":"assets/example_qr.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/favicon.ico","path":"assets/favicon.ico","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/favicon_bak.ico","path":"assets/favicon_bak.ico","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/loading.svg","path":"assets/loading.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/wechat_qr.jpg","path":"assets/wechat_qr.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/avatar/Misaka.jpg","path":"avatar/Misaka.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/dark.css.map","path":"css/dark.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/css/mobile.css","path":"css/mobile.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/mobile.css.map","path":"css/mobile.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/css/style.css.map","path":"css/style.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff","path":"font/Source Sans Pro.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","path":"font/Source Sans Pro.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","path":"font/Oswald-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","path":"font/SourceCodePro-Regular.ttf.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","path":"font/SourceCodePro-Regular.ttf.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/404-bg.jpg","path":"intro/404-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/about-bg.jpg","path":"intro/about-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/index-bg.jpg","path":"intro/index-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/post-bg.jpg","path":"intro/post-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/webfontloader.min.js","path":"lib/webfontloader.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/customFontLoader.js","path":"scripts/customFontLoader.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/customFontLoader.js.map","path":"scripts/customFontLoader.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/dark.js","path":"scripts/dark.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/dark.js.map","path":"scripts/dark.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js","path":"scripts/main.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js.LICENSE.txt","path":"scripts/main.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js","path":"scripts/search.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js.map","path":"scripts/main.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js.LICENSE.txt","path":"scripts/search.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js.map","path":"scripts/search.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/share.js","path":"scripts/share.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/share.js.map","path":"scripts/share.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/avatar/Jason.jpg","path":"avatar/Jason.jpg","modified":0,"renderable":1},{"_id":"source/images/http/http-request.png","path":"images/http/http-request.png","modified":1,"renderable":0},{"_id":"source/images/http/request-methods.png","path":"images/http/request-methods.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world-bak.md1","hash":"1e16dbc0dbf8b18e83f47dbbdffd0d1f27cfe955","modified":1710398484836},{"_id":"themes/archer/layout/_partial/comment/custom.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1688482306000},{"_id":"themes/archer/.eslintignore","hash":"304e696987e3f31cd0a7a13a835d58d8bda3aa6c","modified":1688482306000},{"_id":"themes/archer/.gitattributes","hash":"82c1a621642d5b620275ae1ed59845c3f7015a64","modified":1688482306000},{"_id":"themes/archer/.babelrc","hash":"078678843ebb6992f0cc44304faa6f1cb082bd4a","modified":1688482306000},{"_id":"themes/archer/.gitignore","hash":"9a5e5d0a05fc5bee9bf00a0c5cefc712b4bf0904","modified":1688482306000},{"_id":"themes/archer/.eslintrc.json","hash":"352a07b94efa124a5658b502bf973683be09fd00","modified":1688482306000},{"_id":"themes/archer/.editorconfig","hash":"3a7f38d9586f73ed1c46cfbc9839b3465ec57d7c","modified":1688482306000},{"_id":"themes/archer/.prettierignore","hash":"29648a30c14f6df709eb6610f506c82825910cc8","modified":1688482306000},{"_id":"source/_posts/hello-world.md","hash":"d3c09f52c6064f3950f7af63350c9961e12ae5cb","modified":1710400149593},{"_id":"themes/archer/LICENSE","hash":"0da0c361bf299375739c6b668a44af0f5faf37bb","modified":1688482306000},{"_id":"themes/archer/CHANGELOG.md","hash":"6fbf3e5e8ed6ae6fb68fd74bfd2b53d99db4b1fd","modified":1688482306000},{"_id":"themes/archer/.prettierrc.js","hash":"bae1d8dab7bf8b68207386f366e092778940540c","modified":1688482306000},{"_id":"themes/archer/package.json","hash":"81af75826e854ac80f6337dc4f1ce4b51f066b0b","modified":1688482306000},{"_id":"themes/archer/_config.yml","hash":"0dd04e79b90209217c5bdff1e8160f2976b30312","modified":1710819811209},{"_id":"themes/archer/webpack.dev.js","hash":"7c740341894bd584f72145512a58703bb134ea60","modified":1688482306000},{"_id":"themes/archer/README.md","hash":"63eb0f874bc056d407ee343f853adee9a5765434","modified":1688482306000},{"_id":"themes/archer/webpack.prod.js","hash":"a34abc06d6cd8fa4e267069468726322a3656e2b","modified":1688482306000},{"_id":"themes/archer/gulpfile.js","hash":"ee1ad57aa5113a084091fd86fca2c34e1b9e4b95","modified":1688482306000},{"_id":"themes/archer/dev/archer.sh","hash":"4065c4e55462d5ecf016464adea0d1db967ef4b4","modified":1688482306000},{"_id":"themes/archer/webpack.config.js","hash":"e090744d8e7a0d0906d1d6b8192eb906092d1e9b","modified":1688482306000},{"_id":"themes/archer/docs/README-en.md","hash":"f5e40c5803071bd6dafc94070c6939aa0c02d061","modified":1688482306000},{"_id":"themes/archer/docs/develop-guide-en.md","hash":"c62510d3d14b38126b5a86ff30416cb71abc1d9a","modified":1688482306000},{"_id":"themes/archer/docs/develop-guide-zh.md","hash":"451b304c1a5d081313f0532a4f5665f0855d4cfd","modified":1688482306000},{"_id":"themes/archer/languages/default.yml","hash":"e937791c5080868c3abe20bab4cf266a342b5922","modified":1688482306000},{"_id":"themes/archer/languages/en.yml","hash":"5a1a85fed95dab4f01671714ee8cc5420936c05f","modified":1688482306000},{"_id":"themes/archer/layout/404.ejs","hash":"9137c0b1153ca8cd32e60a38fd79b7e4b91c8bf4","modified":1688482306000},{"_id":"themes/archer/layout/about.ejs","hash":"748786bebad03b1ef79c551f26522fa2bee1b9dd","modified":1688482306000},{"_id":"themes/archer/layout/site-meta.ejs","hash":"562e446a742fde07e0880343d5693bf8cb0dec23","modified":1688482306000},{"_id":"themes/archer/layout/index.ejs","hash":"093f8dbe875cad94b9618f181d1b5621d8874b19","modified":1688482306000},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----feature-request-.md","hash":"edb6b06041660beb656fd5e4062d5a21577cbb3a","modified":1688482306000},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----------bug--help-wanted-or-bug-report-.md","hash":"55e843652d99fae32534a7630e698d2394020baf","modified":1688482306000},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----other-issue-.md","hash":"05f24b2df012808f6410f1ef2230d4fd1a5d6cf5","modified":1688482306000},{"_id":"themes/archer/.github/workflows/deploy-demo-page.yml","hash":"91c065ee0ec29f7bb10263fefa6f3072bc493a38","modified":1688482306000},{"_id":"themes/archer/layout/_partial/algolia.ejs","hash":"c7bf50dd6e60fd8e8dfbeab9960172359af7307e","modified":1688482306000},{"_id":"themes/archer/layout/layout.ejs","hash":"1bee90a75c1f4b04c90421419dd68acdec15b998","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-footer-fixed.ejs","hash":"e4dbde6594c0c2d1c5de71ddf968be0879ceddb7","modified":1688482306000},{"_id":"themes/archer/layout/post.ejs","hash":"d421aba0ab93e2b7a22d060da4c56441bf97cdb9","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-background-image.ejs","hash":"18365516cd8819de853716f0d47a72a60a5edc46","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-footer.ejs","hash":"d8f4236166d058421c2e4ff00660be75a3494704","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-header.ejs","hash":"57d1ae0fd6f9f1ab52a64c44a8ae17ee71de22ef","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-head.ejs","hash":"687c08823e7ce43e6ebb44f2fb4b75549abfed29","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-social.ejs","hash":"0190f06c2f0345cec00eba2074bbfd1b56a7fdc9","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-title-tags.ejs","hash":"1d5a95782ffc382fdb6b1239b3b97db125984fa0","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-preload-polyfill.ejs","hash":"d046322674052b0667775dca0886f14e0d812897","modified":1688482306000},{"_id":"themes/archer/layout/_partial/custom-font.ejs","hash":"bc6bfda53f8856e1473263a44fd861e96cc00719","modified":1688482306000},{"_id":"themes/archer/source/assets/beian.png","hash":"a99df13e8eb11db86edebf6e5ac246eb59f4b3c4","modified":1688482306000},{"_id":"themes/archer/source/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1688482306000},{"_id":"themes/archer/source/assets/example_qr.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1688482306000},{"_id":"themes/archer/layout/_partial/base-profile.ejs","hash":"f63032391dd75905b6663628a9ca231fa0283350","modified":1688482306000},{"_id":"themes/archer/source/assets/favicon_bak.ico","hash":"8b200c575d273d41a179c102442e191414e74eae","modified":1688482306000},{"_id":"themes/archer/source/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1688482306000},{"_id":"themes/archer/source/avatar/Misaka.jpg","hash":"74a0372523f98dfbba992bf80642e160d04dc9b1","modified":1688482306000},{"_id":"themes/archer/layout/_partial/intro-height.ejs","hash":"7b8b078b1c1e5b216e46b32a0cab67330c92c734","modified":1688482306000},{"_id":"themes/archer/source/css/dark.css","hash":"4db211216f16a5e66d4d499158f4005a1bbb39f5","modified":1688482306000},{"_id":"themes/archer/source/assets/wechat_qr.jpg","hash":"20763d666624facc585e34645018deadb343b4b5","modified":1705482083315},{"_id":"themes/archer/source/css/dark.css.map","hash":"f49556935deae49df3158c2eb2265464129ef978","modified":1688482306000},{"_id":"themes/archer/source/css/mobile.css.map","hash":"c9f9dade45b119ae2eb7a93be0160baef4d494f8","modified":1688482306000},{"_id":"themes/archer/source/css/mobile.css","hash":"acb0dfcce26ec93f59c6ec4936006abbe8daefee","modified":1688482306000},{"_id":"themes/archer/source/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1688482306000},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1688482306000},{"_id":"themes/archer/source/css/style.css","hash":"f08b1ec3a5fe1bf936401a238d55e0487296b42c","modified":1688482306000},{"_id":"themes/archer/source/scripts/customFontLoader.js.map","hash":"702a44b0b1b450263592bfb1199c8d36ea9834a2","modified":1688482306000},{"_id":"themes/archer/source/lib/webfontloader.min.js","hash":"4c69aeb4e4f355912503d1c460e8e7aa6ea6963e","modified":1688482306000},{"_id":"themes/archer/source/scripts/dark.js.map","hash":"feb9e1905c4b313b839c1c3b69ad61c05f265a9a","modified":1688482306000},{"_id":"themes/archer/source/scripts/dark.js","hash":"28ba818b2ab8a9454a52fe2710b5a8a81a195e4d","modified":1688482306000},{"_id":"themes/archer/source/scripts/customFontLoader.js","hash":"7c2f03fbd2b8340b77b1b02778a34e5ac10b560c","modified":1688482306000},{"_id":"themes/archer/source/scripts/main.js.LICENSE.txt","hash":"959bfc660011bc6a0800fe9e7974080f64c062aa","modified":1688482306000},{"_id":"themes/archer/source/scripts/search.js.LICENSE.txt","hash":"2c9b607ded909550f2ed2d0f2e7271781d9f78d9","modified":1688482306000},{"_id":"themes/archer/src/js/browser.js","hash":"c56e0094a04d6f20564f8f0da1496cb7631d4dc2","modified":1688482306000},{"_id":"themes/archer/source/scripts/share.js","hash":"2210dd8dacea4f1ca11c0047dfafd0a170abd953","modified":1688482306000},{"_id":"themes/archer/src/js/customFontLoader.js","hash":"98bb3a1c0f69bc2675bfa6579df2dde38ba6fded","modified":1688482306000},{"_id":"themes/archer/src/js/fancybox.js","hash":"6dfc8015d6000c76806424876f5472f39e5485af","modified":1688482306000},{"_id":"themes/archer/src/js/dark.js","hash":"2cd243df8593b18a1a293f483d2db18503c53547","modified":1688482306000},{"_id":"themes/archer/src/js/fontawsome.js","hash":"43e852899ee1bc22495253428a2ff3bdedf89882","modified":1688482306000},{"_id":"themes/archer/src/js/init.js","hash":"dee0a1c959bd4dc3953428b1b2137f42bc659b32","modified":1688482306000},{"_id":"themes/archer/src/js/initSidebar.js","hash":"c9c030a451ed394934c1858c7d55ec5a7b588305","modified":1688482306000},{"_id":"themes/archer/src/js/main.js","hash":"658565fbf20adc5b9b237a53c973d0685ce60202","modified":1688482306000},{"_id":"themes/archer/src/js/mobile.js","hash":"4ae6837e18b729f85b5097867fc742ba2d1edf25","modified":1688482306000},{"_id":"themes/archer/src/js/sidebar.js","hash":"2518f2b0b7947530851e6c73245dddc96a618a08","modified":1688482306000},{"_id":"themes/archer/src/js/share.js","hash":"c2e6a3d8d6883cde0c67484daca5e742ebb8e0d1","modified":1688482306000},{"_id":"themes/archer/src/js/scroll.js","hash":"3017b329329888b287ad233831138428475749be","modified":1688482306000},{"_id":"themes/archer/src/js/toc.js","hash":"96a7e07d1976eb29a77799ac2b7abb47907f4b45","modified":1688482306000},{"_id":"themes/archer/src/js/tag.js","hash":"395db7eb2d09e2df6eefcf3f4c7da5cd809a6221","modified":1688482306000},{"_id":"themes/archer/src/js/util.js","hash":"e49b30f6ba82d5183d005fc0192d2d673969586b","modified":1688482306000},{"_id":"themes/archer/src/scss/_common.scss","hash":"e80acb4f0049d24260f0a32a301f985ae7e166b8","modified":1688482306000},{"_id":"themes/archer/src/js/search.js","hash":"0bf92b51fef092989f4fe16fb7ef7724d11e9f58","modified":1688482306000},{"_id":"themes/archer/src/scss/_normalize.scss","hash":"a2dbeb38ad08bb8975856d75954cc697bf8e5ff7","modified":1688482306000},{"_id":"themes/archer/src/scss/dark.scss","hash":"739af46f0ef8c0c89c3e78ec577e844678f737b5","modified":1688482306000},{"_id":"themes/archer/src/scss/_mixin.scss","hash":"78da2632e7150baa0fd1f6d04fc59ca5e304903d","modified":1688482306000},{"_id":"themes/archer/src/scss/_variables.scss","hash":"01e5cab2b5fc686c52145d65229f17db13a3cc54","modified":1688482306000},{"_id":"themes/archer/src/scss/mobile.scss","hash":"2b542af943a8502aae26362dd2af1fbcf68eac1c","modified":1688482306000},{"_id":"themes/archer/src/scss/style.scss","hash":"b10b9a44efaa293b7ac220e66c963dca04ad4bc7","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/gitment.ejs","hash":"eda79ada5171ed44e4f3ae4d8a345ad2c7adb2df","modified":1688482306000},{"_id":"themes/archer/source/avatar/Jason.jpg","hash":"0eae332ea91f9e04b54f35d2ed1b17b5b37aee64","modified":1710397722571},{"_id":"themes/archer/layout/_partial/comment/disqus.ejs","hash":"0f0612ce9ca5c3dc349153a87fdc9dba5f93c52c","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/gitalk.ejs","hash":"840279fd3e21dc1cdb1932fe4d9a3be5f670e764","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/changyan.ejs","hash":"cc02b3cf9586135d2d7f822c7ad97d81fdf6d4e5","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/utteranc.ejs","hash":"f4ec58c74e6870b8c22032ad3a3c1ee33e5ec41d","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/livere.ejs","hash":"d65d9372fca4b316b94ae511f8ccfb0b92d7b065","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/valine.ejs","hash":"24cd7b9e28ceb4b2083ddccce26517de64b35119","modified":1688482306000},{"_id":"themes/archer/layout/_partial/critical-css/critical-style.ejs","hash":"e67a7a2f6bcbfd97e95577446872e217e0c48e80","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/youyan.ejs","hash":"2f4ef49a74a8d63310af60ecda6d765b8c386ff4","modified":1688482306000},{"_id":"themes/archer/layout/_partial/comment/waline.ejs","hash":"c2208d6f05490bbf1b35cdf1519a39933212c33e","modified":1688482306000},{"_id":"themes/archer/layout/_partial/math/mathjax.ejs","hash":"84c40a07765e95213045e9b9f7a8c9aaa9c69161","modified":1688482306000},{"_id":"themes/archer/layout/_partial/sidebar/base-sidebar.ejs","hash":"bdf08beebbe454da9d4c55b35efd317d5f222be5","modified":1688482306000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-categories.ejs","hash":"02f407d9f9968d228a6a47f2a283b8cf41836a1a","modified":1688482306000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-tags.ejs","hash":"469455994771da166ddecb4839efa9ef28f2775d","modified":1688482306000},{"_id":"themes/archer/layout/_partial/script/font-loader.ejs","hash":"0473335774025d185dcbaf641496b25a8f33f7af","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_common-dark.scss","hash":"fc03470312c57a39bc131a1e86cdd3ea2ddb164a","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_404.scss","hash":"9e5cb20871e5bf1af4cf50694a73bd7c9fe64685","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_algolia.scss","hash":"fd7716d8559a9f58f7caef576c553ca7ba1a85e1","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_index-page.scss","hash":"91dc2a0c1ca8d25b1f27d91fa1c81ceb5ff8c3bc","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_algolia-dark.scss","hash":"e9ea52ca5410c6a6eb53d2a6de1419d3db97d8ca","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_post-page.scss","hash":"7583c8c2004e333c5b94e4b868ac778357e0d21e","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_index-page-dark.scss","hash":"4c1406e82b2d4503e027443f64f0984fe0942e1d","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_post-page-dark.scss","hash":"d61059785c72c626990f5b473dc3570cb52c0d73","modified":1688482306000},{"_id":"themes/archer/src/scss/_mobile/_partial/_index-page-mobile.scss","hash":"2d166bb6f234b8773a9ea12457b10e94902a32f1","modified":1688482306000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-archives.ejs","hash":"6360da867c23b8daa5e34e62c5c5552e2974e360","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_comment/_gitalk.scss","hash":"341bb251987f30221936e36b44374b2b5ce0d218","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_footer.scss","hash":"4aafefa6834c8a8583c1cdace620a31306676a57","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_header.scss","hash":"ce683553806293fea0466f363b18de0ee341dd4e","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_footer-fixed.scss","hash":"1eb918f6c16054ef2b53b9eea60c751ad89bbd55","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_intro.scss","hash":"4567b9081f063e5fb388b0671f3bc322bdc9acfa","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_profile.scss","hash":"4771add895f8a47917ae2d0d34b92cb327329bf1","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_paginator.scss","hash":"67c2e697a5fbb3b8006cf358ea45eb7f75b496f8","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_partial/_scrollbar.scss","hash":"424c08f4acc3f643567f138ffea7d8337791d2c4","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_post/_code.scss","hash":"504f9fdb723c7b287d958211189d25919ac592f6","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_post/_writing-enhance.scss","hash":"4cb495c64d144b2bcf225f2b87641017bd652e66","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-archive.scss","hash":"a7374f46ca31bf8ebf5bafea909100921d0c52a4","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-tags.scss","hash":"93cc82cb56663e83e90fbd6fe31ffdd38e694f3b","modified":1688482306000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar.scss","hash":"b2870a9cdaea9b9c8426d406d6859a8f3f1a995f","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_comment/_gitalk-dark.scss","hash":"57accaee4bb5b502d5d3e94c7981ac6996804cf0","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_footer-fixed-dark.scss","hash":"f4e3eb7aa19c1061b5d9df4f6a7745902e5843f2","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_footer-dark.scss","hash":"d074a8fef75ba626dd3448cc42290a8c722fd182","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_profile-dark.scss","hash":"c0fe68f6e9c196157adc71fea0d97f6f70f0a31b","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_header-dark.scss","hash":"ed815d959a37cccdf9137ace91c68bea8ca922c2","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_post/_code-dark.scss","hash":"9ded8203699f816558fd1493a3ce7cf3d38818e9","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-archive-dark.scss","hash":"79b7548214339807ff713f0c7454a227d24d6d0d","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-dark.scss","hash":"8e77738f83a425eebb00513ee98e487fe71fdc22","modified":1688482306000},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-tags-dark.scss","hash":"6621db2ff1182e3cd14286af4b8f3d8c5bd14e2a","modified":1688482306000},{"_id":"themes/archer/src/scss/_mobile/_partial/_sidebar/_sidebar-tags-mobile.scss","hash":"b5c62234defe693b4cfa65bda188d71c937eeaf9","modified":1688482306000},{"_id":"themes/archer/source/assets/favicon.ico","hash":"c136618e070daf370da961ac730973293a088b9e","modified":1710382119333},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1688482306000},{"_id":"themes/archer/source/css/style.css.map","hash":"dbe8f8c1fccf8bd9d28ecf3874036a2281319aa0","modified":1688482306000},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1688482306000},{"_id":"themes/archer/src/scss/_mobile/_partial/_post/_writing-enhance-mobile.scss","hash":"9e714c1cdc61a4ebd5510667e87e879d0b14de67","modified":1688482306000},{"_id":"themes/archer/source/lib/jquery.min.js","hash":"ad886e472b3557f3dc7dfa2bc43468ab8d1cef5b","modified":1688482306000},{"_id":"themes/archer/source/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1688482306000},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1688482306000},{"_id":"themes/archer/source/intro/post-bg.jpg","hash":"525fafb2238c27754d8fa751f143ff1de9b8482d","modified":1688482306000},{"_id":"themes/archer/source/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1688482306000},{"_id":"themes/archer/source/scripts/search.js","hash":"ac8e9d130ea410832a421d661898abee63bd8e67","modified":1688482306000},{"_id":"themes/archer/source/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1688482306000},{"_id":"themes/archer/source/scripts/share.js.map","hash":"1e018aa465800a066480e33c848f380880af6743","modified":1688482306000},{"_id":"themes/archer/package-lock.json","hash":"400ab1cc2a2f1380a5e9ab69abe3a5b93f923d8d","modified":1688482306000},{"_id":"themes/archer/source/scripts/main.js","hash":"11fd75dddcbef7157fbfb8717b3463a80fda1fb3","modified":1688482306000},{"_id":"themes/archer/source/scripts/main.js.map","hash":"79d928070b7e5333ca241c5563ab4fe9cab31b74","modified":1688482306000},{"_id":"source/images/hello-bg.png","hash":"f70f2a6805ceb4ab1175e391c03923b7264bc431","modified":1705386424945},{"_id":"themes/archer/source/scripts/search.js.map","hash":"bd469588b3bee82b3cf72b72d447c854f4d76875","modified":1688482306000},{"_id":"themes/archer/docs/snap.png","hash":"0b2a8bf016f6eed576abfdcdb7dcf8de51c12562","modified":1688482306000},{"_id":"public/index.html","hash":"91d4a3c5796c205c077ad34a257a547fea925bfa","modified":1710752922628},{"_id":"public/2024/03/13/hello-world/index.html","hash":"0ec9dfad340076ecc1b7798b474c5aad4b3d8236","modified":1710752922628},{"_id":"public/archives/index.html","hash":"df017a9e49e9a1ebe96821c538878802357c486e","modified":1710752922628},{"_id":"public/archives/2024/index.html","hash":"5afa8195ccc0c481aea43debf22de95bfb325010","modified":1710752922628},{"_id":"public/archives/2024/03/index.html","hash":"a7b347899f3534a86f526e6e1458239d8a185432","modified":1710752922628},{"_id":"public/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1710752922628},{"_id":"public/assets/example_qr.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1710752922628},{"_id":"public/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1710752922628},{"_id":"public/assets/favicon_bak.ico","hash":"8b200c575d273d41a179c102442e191414e74eae","modified":1710752922628},{"_id":"public/assets/beian.png","hash":"a99df13e8eb11db86edebf6e5ac246eb59f4b3c4","modified":1710752922628},{"_id":"public/assets/wechat_qr.jpg","hash":"20763d666624facc585e34645018deadb343b4b5","modified":1710752922628},{"_id":"public/avatar/Misaka.jpg","hash":"74a0372523f98dfbba992bf80642e160d04dc9b1","modified":1710752922628},{"_id":"public/css/dark.css.map","hash":"f49556935deae49df3158c2eb2265464129ef978","modified":1710752922628},{"_id":"public/css/mobile.css.map","hash":"c9f9dade45b119ae2eb7a93be0160baef4d494f8","modified":1710752922628},{"_id":"public/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1710752922628},{"_id":"public/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1710752922628},{"_id":"public/scripts/customFontLoader.js.map","hash":"702a44b0b1b450263592bfb1199c8d36ea9834a2","modified":1710752922628},{"_id":"public/scripts/dark.js.map","hash":"feb9e1905c4b313b839c1c3b69ad61c05f265a9a","modified":1710752922628},{"_id":"public/scripts/main.js.LICENSE.txt","hash":"959bfc660011bc6a0800fe9e7974080f64c062aa","modified":1710752922628},{"_id":"public/scripts/search.js.LICENSE.txt","hash":"2c9b607ded909550f2ed2d0f2e7271781d9f78d9","modified":1710752922628},{"_id":"public/avatar/Jason.jpg","hash":"0eae332ea91f9e04b54f35d2ed1b17b5b37aee64","modified":1710752922628},{"_id":"public/assets/favicon.ico","hash":"c136618e070daf370da961ac730973293a088b9e","modified":1710752922628},{"_id":"public/css/style.css.map","hash":"dbe8f8c1fccf8bd9d28ecf3874036a2281319aa0","modified":1710752922628},{"_id":"public/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1710752922628},{"_id":"public/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1710752922628},{"_id":"public/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1710752922628},{"_id":"public/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1710752922628},{"_id":"public/css/dark.css","hash":"4db211216f16a5e66d4d499158f4005a1bbb39f5","modified":1710752922628},{"_id":"public/css/mobile.css","hash":"acb0dfcce26ec93f59c6ec4936006abbe8daefee","modified":1710752922628},{"_id":"public/lib/webfontloader.min.js","hash":"4c69aeb4e4f355912503d1c460e8e7aa6ea6963e","modified":1710752922628},{"_id":"public/scripts/customFontLoader.js","hash":"7c2f03fbd2b8340b77b1b02778a34e5ac10b560c","modified":1710752922628},{"_id":"public/scripts/dark.js","hash":"28ba818b2ab8a9454a52fe2710b5a8a81a195e4d","modified":1710752922628},{"_id":"public/intro/post-bg.jpg","hash":"525fafb2238c27754d8fa751f143ff1de9b8482d","modified":1710752922628},{"_id":"public/scripts/share.js.map","hash":"1e018aa465800a066480e33c848f380880af6743","modified":1710752922628},{"_id":"public/scripts/share.js","hash":"2210dd8dacea4f1ca11c0047dfafd0a170abd953","modified":1710752922628},{"_id":"public/css/style.css","hash":"f08b1ec3a5fe1bf936401a238d55e0487296b42c","modified":1710752922628},{"_id":"public/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1710752922628},{"_id":"public/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1710752922628},{"_id":"public/lib/jquery.min.js","hash":"ad886e472b3557f3dc7dfa2bc43468ab8d1cef5b","modified":1710752922628},{"_id":"public/images/hello-bg.png","hash":"f70f2a6805ceb4ab1175e391c03923b7264bc431","modified":1710752922628},{"_id":"public/scripts/search.js.map","hash":"bd469588b3bee82b3cf72b72d447c854f4d76875","modified":1710752922628},{"_id":"public/scripts/search.js","hash":"ac8e9d130ea410832a421d661898abee63bd8e67","modified":1710752922628},{"_id":"public/scripts/main.js.map","hash":"79d928070b7e5333ca241c5563ab4fe9cab31b74","modified":1710752922628},{"_id":"public/scripts/main.js","hash":"11fd75dddcbef7157fbfb8717b3463a80fda1fb3","modified":1710752922628},{"_id":"source/_posts/http.md","hash":"303424f0c8fdba7de4cd92d444581e915c34546f","modified":1711010783765},{"_id":"source/images/http-request.png","hash":"eed1c7354200ef63062c4290552839cea43c5c07","modified":1710907639923},{"_id":"source/images/http/http-request.png","hash":"4d29675c37a4cc0df885db03cff820aa3f98080c","modified":1710926387387},{"_id":"source/images/http/request-methods.png","hash":"5914a2642fc3c771aaddbb5a4db79d020c75ba27","modified":1710917201189}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"欢迎来到 ITProHub！","_content":"![background](/images/hello-bg.png)\n# 🌐 欢迎来到 ITProHub！\n\n## 🚀 你的信息技术专业中心 🚀\n\n在 ITProHub，我们致力于成为信息技术领域的中心枢纽，为专业人士、学习者和技术爱好者提供丰富的资源、技能培训和社区交流平台。\n\n### 🔍 ITPro: 专业的信息技术支持\n\n无论你是正在寻找IT职业发展的道路，还是想提升你的专业技能，ITProHub都为你提供了全面的资源和指导。我们关注行业趋势，分享最新的技术知识，助你成为更专业的IT从业者。\n\n### 💼 Hub: 中心化的资源和社区\n\nITProHub是一个汇聚各种IT资源的中心，包括职业指导、技术文章、培训课程等。在我们的社区中，你可以与其他IT专业人士建立联系，分享经验，共同成长。\n\n#### ✨ 我们的特色服务和内容包括：\n\n🎓 专业的IT技能培训课程\n\n📰 行业趋势和技术文章分享\n\n🚀 职业发展指导和招聘信息\n\n💬 与专业人士互动的社交平台\n\n👥 加入我们的社区，你将获得：\n\n与同行专业人士的互动和交流机会\n\n获取实用的职业发展建议和技术支持\n\n参与丰富多彩的线上和线下活动\n\n无论你是刚刚踏入IT领域，还是寻求更高级别的技术挑战，ITProHub都是你信息技术之旅的理想伴侣。\n\n\n## 🌐 探索无限可能，加入 ITProHub ！🌐\n\n公众号将不定期更新，欢迎订阅！\n\n#ITProHub #信息技术 #专业发展 #社区交流\n","source":"_posts/hello-world.md","raw":"---\ntitle: 欢迎来到 ITProHub！\n---\n![background](/images/hello-bg.png)\n# 🌐 欢迎来到 ITProHub！\n\n## 🚀 你的信息技术专业中心 🚀\n\n在 ITProHub，我们致力于成为信息技术领域的中心枢纽，为专业人士、学习者和技术爱好者提供丰富的资源、技能培训和社区交流平台。\n\n### 🔍 ITPro: 专业的信息技术支持\n\n无论你是正在寻找IT职业发展的道路，还是想提升你的专业技能，ITProHub都为你提供了全面的资源和指导。我们关注行业趋势，分享最新的技术知识，助你成为更专业的IT从业者。\n\n### 💼 Hub: 中心化的资源和社区\n\nITProHub是一个汇聚各种IT资源的中心，包括职业指导、技术文章、培训课程等。在我们的社区中，你可以与其他IT专业人士建立联系，分享经验，共同成长。\n\n#### ✨ 我们的特色服务和内容包括：\n\n🎓 专业的IT技能培训课程\n\n📰 行业趋势和技术文章分享\n\n🚀 职业发展指导和招聘信息\n\n💬 与专业人士互动的社交平台\n\n👥 加入我们的社区，你将获得：\n\n与同行专业人士的互动和交流机会\n\n获取实用的职业发展建议和技术支持\n\n参与丰富多彩的线上和线下活动\n\n无论你是刚刚踏入IT领域，还是寻求更高级别的技术挑战，ITProHub都是你信息技术之旅的理想伴侣。\n\n\n## 🌐 探索无限可能，加入 ITProHub ！🌐\n\n公众号将不定期更新，欢迎订阅！\n\n#ITProHub #信息技术 #专业发展 #社区交流\n","slug":"hello-world","published":1,"date":"2024-03-13T07:54:13.172Z","updated":"2024-03-14T07:09:09.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltwq4btx0000f4p1f3yha908","content":"<p><img src=\"/images/hello-bg.png\" alt=\"background\"></p>\n<h1 id=\"🌐-欢迎来到-ITProHub！\"><a href=\"#🌐-欢迎来到-ITProHub！\" class=\"headerlink\" title=\"🌐 欢迎来到 ITProHub！\"></a>🌐 欢迎来到 ITProHub！</h1><h2 id=\"🚀-你的信息技术专业中心-🚀\"><a href=\"#🚀-你的信息技术专业中心-🚀\" class=\"headerlink\" title=\"🚀 你的信息技术专业中心 🚀\"></a>🚀 你的信息技术专业中心 🚀</h2><p>在 ITProHub，我们致力于成为信息技术领域的中心枢纽，为专业人士、学习者和技术爱好者提供丰富的资源、技能培训和社区交流平台。</p>\n<h3 id=\"🔍-ITPro-专业的信息技术支持\"><a href=\"#🔍-ITPro-专业的信息技术支持\" class=\"headerlink\" title=\"🔍 ITPro: 专业的信息技术支持\"></a>🔍 ITPro: 专业的信息技术支持</h3><p>无论你是正在寻找IT职业发展的道路，还是想提升你的专业技能，ITProHub都为你提供了全面的资源和指导。我们关注行业趋势，分享最新的技术知识，助你成为更专业的IT从业者。</p>\n<h3 id=\"💼-Hub-中心化的资源和社区\"><a href=\"#💼-Hub-中心化的资源和社区\" class=\"headerlink\" title=\"💼 Hub: 中心化的资源和社区\"></a>💼 Hub: 中心化的资源和社区</h3><p>ITProHub是一个汇聚各种IT资源的中心，包括职业指导、技术文章、培训课程等。在我们的社区中，你可以与其他IT专业人士建立联系，分享经验，共同成长。</p>\n<h4 id=\"✨-我们的特色服务和内容包括：\"><a href=\"#✨-我们的特色服务和内容包括：\" class=\"headerlink\" title=\"✨ 我们的特色服务和内容包括：\"></a>✨ 我们的特色服务和内容包括：</h4><p>🎓 专业的IT技能培训课程</p>\n<p>📰 行业趋势和技术文章分享</p>\n<p>🚀 职业发展指导和招聘信息</p>\n<p>💬 与专业人士互动的社交平台</p>\n<p>👥 加入我们的社区，你将获得：</p>\n<p>与同行专业人士的互动和交流机会</p>\n<p>获取实用的职业发展建议和技术支持</p>\n<p>参与丰富多彩的线上和线下活动</p>\n<p>无论你是刚刚踏入IT领域，还是寻求更高级别的技术挑战，ITProHub都是你信息技术之旅的理想伴侣。</p>\n<h2 id=\"🌐-探索无限可能，加入-ITProHub-！🌐\"><a href=\"#🌐-探索无限可能，加入-ITProHub-！🌐\" class=\"headerlink\" title=\"🌐 探索无限可能，加入 ITProHub ！🌐\"></a>🌐 探索无限可能，加入 ITProHub ！🌐</h2><p>公众号将不定期更新，欢迎订阅！</p>\n<p>#ITProHub #信息技术 #专业发展 #社区交流</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/hello-bg.png\" alt=\"background\"></p>\n<h1 id=\"🌐-欢迎来到-ITProHub！\"><a href=\"#🌐-欢迎来到-ITProHub！\" class=\"headerlink\" title=\"🌐 欢迎来到 ITProHub！\"></a>🌐 欢迎来到 ITProHub！</h1><h2 id=\"🚀-你的信息技术专业中心-🚀\"><a href=\"#🚀-你的信息技术专业中心-🚀\" class=\"headerlink\" title=\"🚀 你的信息技术专业中心 🚀\"></a>🚀 你的信息技术专业中心 🚀</h2><p>在 ITProHub，我们致力于成为信息技术领域的中心枢纽，为专业人士、学习者和技术爱好者提供丰富的资源、技能培训和社区交流平台。</p>\n<h3 id=\"🔍-ITPro-专业的信息技术支持\"><a href=\"#🔍-ITPro-专业的信息技术支持\" class=\"headerlink\" title=\"🔍 ITPro: 专业的信息技术支持\"></a>🔍 ITPro: 专业的信息技术支持</h3><p>无论你是正在寻找IT职业发展的道路，还是想提升你的专业技能，ITProHub都为你提供了全面的资源和指导。我们关注行业趋势，分享最新的技术知识，助你成为更专业的IT从业者。</p>\n<h3 id=\"💼-Hub-中心化的资源和社区\"><a href=\"#💼-Hub-中心化的资源和社区\" class=\"headerlink\" title=\"💼 Hub: 中心化的资源和社区\"></a>💼 Hub: 中心化的资源和社区</h3><p>ITProHub是一个汇聚各种IT资源的中心，包括职业指导、技术文章、培训课程等。在我们的社区中，你可以与其他IT专业人士建立联系，分享经验，共同成长。</p>\n<h4 id=\"✨-我们的特色服务和内容包括：\"><a href=\"#✨-我们的特色服务和内容包括：\" class=\"headerlink\" title=\"✨ 我们的特色服务和内容包括：\"></a>✨ 我们的特色服务和内容包括：</h4><p>🎓 专业的IT技能培训课程</p>\n<p>📰 行业趋势和技术文章分享</p>\n<p>🚀 职业发展指导和招聘信息</p>\n<p>💬 与专业人士互动的社交平台</p>\n<p>👥 加入我们的社区，你将获得：</p>\n<p>与同行专业人士的互动和交流机会</p>\n<p>获取实用的职业发展建议和技术支持</p>\n<p>参与丰富多彩的线上和线下活动</p>\n<p>无论你是刚刚踏入IT领域，还是寻求更高级别的技术挑战，ITProHub都是你信息技术之旅的理想伴侣。</p>\n<h2 id=\"🌐-探索无限可能，加入-ITProHub-！🌐\"><a href=\"#🌐-探索无限可能，加入-ITProHub-！🌐\" class=\"headerlink\" title=\"🌐 探索无限可能，加入 ITProHub ！🌐\"></a>🌐 探索无限可能，加入 ITProHub ！🌐</h2><p>公众号将不定期更新，欢迎订阅！</p>\n<p>#ITProHub #信息技术 #专业发展 #社区交流</p>\n"},{"title":"深入了解 HTTP 状态码和消息头","date":"2024-03-19T08:11:52.000Z","_content":"HTTP（Hypertext Transfer Protocol）是现代网络通信的基础，它通过消息头来传递关键信息，从而实现客户端和服务器之间的通信。在本文中，我们将探讨 HTTP 消息头的作用、结构以及常见的使用方式，并通过详细的代码例子来说明。\n\n在开始本文的阅读之前，默认屏幕前的老铁已经对HTTP有了基础的认识。如果不是，请移步学习[超文本传输协议](https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#)\n\n\n## 什么是HTTP消息头：协议中的精华\nHTTP 消息头是 HTTP 报文中的一部分，它包含了一系列键值对，用于描述报文的属性和特征。每个键值对被称为一个消息头字段，其中键是字段名，值是字段值，它们由一个冒号（:）分隔。消息头字段通常用于控制缓存、身份验证、内容协商、内容类型、内容编码等方面的行为。\n\n## HTTP 消息头的类型\nHTTP 消息头由若干个字段组成，每个字段占据一行，以 CRLF（Carriage Return Line Feed）作为分隔符。通常，消息头分为请求头和响应头两种类型。请求头出现在客户端发送的 HTTP 请求中，而响应头出现在服务器返回的 HTTP 响应中。\n\n```http request\nHost: www.itprohub.site\nConnection: keep-alive\nContent-Length: 1823\nsec-ch-ua: \"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\"\nsec-ch-ua-platform: \"Windows\"\nsec-ch-ua-mobile: ?0\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36\nContent-Type: application/json\nAccept: */*\nOrigin: https://www.itprohub.site\nSec-Fetch-Site: cross-site\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://www.itprohub.site\nAccept-Encoding: gzip, deflate, br, zstd\nAccept-Language: zh-CN,zh;q=0.9\n```\n\n1. 通用头部（General Headers）：适用于请求和响应的通用头部，如：Cache-Control、Connection、Date、Pragma、Trailer。\n2. 请求头部（Request Headers）：出现在 HTTP 请求中，描述客户端的信息和请求的属性，如：Host，User-Agent，Accept，Authorization。\n3. 响应头部（Response Headers）：出现在 HTTP 响应中，描述服务器的信息和响应的属性，如：Content-Type,Content-Length，Location,Server。\n   > 关于响应头里面的类型也可以参考老夫另外一篇分享[了解 MIME 类型：Web 开发中的重要概念](https://juejin.cn/post/7340286503505592330)\n4. 实体头部（Entity Headers）：描述请求或响应的主体内容，如：Content-Encoding,Content-Language，Content-Disposition。\n\n## HTTP消息头的常见字段\n+ Cache-Control：控制缓存行为。\n+ Content-Type：指定消息主体的媒体类型。\n+ Content-Length：指定消息主体的长度。\n+ Host：指定服务器的主机名和端口号。\n+ User-Agent：客户端标识，描述客户端的软件和操作系统信息。\n+ Server：服务器标识，描述服务器的软件和操作系统信息。\n\n其他字段的含义就不在这里赘述了，感兴趣的老铁可以移步[HTTP头字段](https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-29)\n\n## HTTP消息头的使用场景\n### 控制缓存行为：Cache-Control\n假设你正在开发一个新闻网站，用户可以浏览最新的新闻文章。为了提高网站的性能和用户体验，你想要利用缓存来减少服务器的负载并加快页面加载速度。\n\n在这种情况下，你可以使用 Cache-Control 和 Last-Modified（或 ETag）头部来控制新闻文章页面的缓存行为。当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部。如果用户再次访问相同的文章，客户端可以根据这些头部来决定是否使用缓存。\n具体地，你可以采取以下步骤：\n1. 当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部：\n```http request\nHTTP/1.1 200 OK\nContent-Type: text/html\nCache-Control: max-age=3600\nLast-Modified: Mon, 25 Jan 2024 12:00:00 GMT\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>News Article</title>\n</head>\n<body>\n    <h1>Breaking News!</h1>\n    <p>This is the latest news article.</p>\n</body>\n</html>\n```\n2. 当用户再次访问相同的文章时，客户端可以向服务器发送条件请求，检查文章是否发生了变化：\n```http request\nGET /news/article?id=123 HTTP/1.1\nHost: example.com\nIf-Modified-Since: Mon, 25 Jan 2024 12:00:00 GMT\n```\n3. 如果文章未发生变化，服务器可以返回一个 304 Not Modified 响应，表示文章仍然有效，客户端可以使用缓存：\n```http request\nHTTP/1.1 304 Not Modified\n```\n\n### 控制消息的传输和连接行为\n考虑一个在线文件传输服务的实际场景。在这个服务中，用户可以上传文件到服务器，并且可以从服务器下载已经上传的文件。为了实现更好的用户体验和系统性能，我们需要控制消息的传输和连接行为。\n1. 上传文件请求\n   当用户上传文件时，客户端会向服务器发送上传请求，并将文件数据通过 POST 请求发送给服务器。为了控制消息的传输，我们可以使用流式传输（Streaming）来逐块地上传文件，而不是一次性发送整个文件。\n```http request\nPOST /upload HTTP/1.1\nHost: example.com\nContent-Type: application/octet-stream\nContent-Length: <length_of_file_data>\n\n<file_data_chunk>\n```\n\n2. 处理上传请求\n   服务器收到上传文件的请求后，会逐块地接收文件数据，并将其写入到文件系统中的临时文件中。在处理上传请求时，我们需要控制连接的持续性，以便及时释放服务器资源并提高系统的并发性能。\n3. 上传完成响应\n   当文件上传完成时，服务器会向客户端发送上传成功的响应，并包含上传文件的元数据信息，如文件名、大小等。在响应中，我们可以设置连接头部为 Connection: close，表示该请求处理完毕后，关闭连接。\n```http request\nHTTP/1.1 200 OK\nContent-Type: application/json\nConnection: close\n\n{\"status\": \"success\", \"filename\": \"example.txt\", \"size\": 1024}\n```\n\n## 可扩展性\nHTTP 消息头很好的体现了HTTP协议的可扩展性，这使得它可以适应各种不同的应用场景和需求。以下是 HTTP 消息头可扩展性的几个方面：\n\n### 自定义消息头\nHTTP 协议允许开发者自定义消息头，以满足特定应用程序的需求。这意味着开发者可以定义自己的消息头字段，并在请求和响应中使用它们来传递特定的元数据信息。\n\n```http request\nPOST /vab-mock-server/api/summary/site-summary/8/tenant-grid HTTP/1.1\n...\naccessToken: admin-accessToken\nx-bpm-saasops-token: grwekVGIWIjAIFqRHILI1A==\n```\n上面的例子我们看到，请求头的最后两个属性[accessToken]和[x-bpm-saasops-token]就都是根据业务自定义的两个属性\n### 标准扩展头\nHTTP 协议规范定期更新，并不断添加新的标准消息头字段，以满足日益增长的网络通信需求。例如，HTTP/2 引入了一些新的标准头部，如 :authority 和 :method 等，用于支持新的协议功能。\n\n当谈到扩展标准消息头时，一个很好的例子是 Accept 消息头。Accept 消息头用于指示客户端所能接受的响应内容类型。通常情况下，它包含一个或多个媒体类型（MIME 类型）和相应的优先级。\n\n例如，一个客户端可以发送如下的 Accept 消息头：\n```\nAccept: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8\n```\n在这个例子中，客户端指示它可以接受 text/html、application/xhtml+xml 和 application/xml 类型的响应内容，并为它们设置了不同的优先级。这种设置允许客户端灵活地控制服务器返回的响应类型，根据客户端的需求和偏好进行适当的选择。\n\n### 消息头参数化\n部分消息头支持参数化，允许在消息头中传递额外的参数信息。例如：\n\n假设服务器要向客户端传送一个名为 \"document.pdf\" 的 PDF 文件，并且希望客户端将该文件保存到本地而不是直接在浏览器中打开。服务器可以通过设置 Content-Disposition 消息头来指示客户端的行为。下面是服务器可能返回的响应头部分：\n```http request\nContent-Disposition: attachment; filename=\"document.pdf\"\n```\n在这个例子中，Content-Disposition 消息头的值是 \"attachment\"，表示该响应中包含的是一个附件文件。另外，通过 filename 参数指定了文件名为 \"document.pdf\"，这样客户端就知道该附件应该以什么名字保存。\n当客户端收到这个响应时，会根据 Content-Disposition 消息头的指示，将响应中的内容保存为一个名为 \"document.pdf\" 的文件，而不是尝试在浏览器中打开它。这样，服务器可以控制客户端对响应的处理方式，实现了更灵活的消息传递和处理。\n\n### 条件请求头\n条件请求头允许客户端在发送请求时附加条件，以控制服务器的行为。\n这一点可以参考上面[控制缓存行为：Cache-Control](#控制缓存行为：Cache-Control)\n\n\n\n## 结语\n其实关于HTTP消息头还有很多知识点本文没有讲到。本文的介绍，姑且算是入门指引吧。从基础知识到应用场景，希望能够帮助读者更好地理解和应用 HTTP 协议。在实际开发中，合理利用 HTTP 协议能够提升 Web 应用的性能和安全性。","source":"_posts/http.md","raw":"---\ntitle: 深入了解 HTTP 状态码和消息头\ndate: 2024-03-19 16:11:52\ntags: http 协议 http协议\n---\nHTTP（Hypertext Transfer Protocol）是现代网络通信的基础，它通过消息头来传递关键信息，从而实现客户端和服务器之间的通信。在本文中，我们将探讨 HTTP 消息头的作用、结构以及常见的使用方式，并通过详细的代码例子来说明。\n\n在开始本文的阅读之前，默认屏幕前的老铁已经对HTTP有了基础的认识。如果不是，请移步学习[超文本传输协议](https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#)\n\n\n## 什么是HTTP消息头：协议中的精华\nHTTP 消息头是 HTTP 报文中的一部分，它包含了一系列键值对，用于描述报文的属性和特征。每个键值对被称为一个消息头字段，其中键是字段名，值是字段值，它们由一个冒号（:）分隔。消息头字段通常用于控制缓存、身份验证、内容协商、内容类型、内容编码等方面的行为。\n\n## HTTP 消息头的类型\nHTTP 消息头由若干个字段组成，每个字段占据一行，以 CRLF（Carriage Return Line Feed）作为分隔符。通常，消息头分为请求头和响应头两种类型。请求头出现在客户端发送的 HTTP 请求中，而响应头出现在服务器返回的 HTTP 响应中。\n\n```http request\nHost: www.itprohub.site\nConnection: keep-alive\nContent-Length: 1823\nsec-ch-ua: \"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\"\nsec-ch-ua-platform: \"Windows\"\nsec-ch-ua-mobile: ?0\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36\nContent-Type: application/json\nAccept: */*\nOrigin: https://www.itprohub.site\nSec-Fetch-Site: cross-site\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://www.itprohub.site\nAccept-Encoding: gzip, deflate, br, zstd\nAccept-Language: zh-CN,zh;q=0.9\n```\n\n1. 通用头部（General Headers）：适用于请求和响应的通用头部，如：Cache-Control、Connection、Date、Pragma、Trailer。\n2. 请求头部（Request Headers）：出现在 HTTP 请求中，描述客户端的信息和请求的属性，如：Host，User-Agent，Accept，Authorization。\n3. 响应头部（Response Headers）：出现在 HTTP 响应中，描述服务器的信息和响应的属性，如：Content-Type,Content-Length，Location,Server。\n   > 关于响应头里面的类型也可以参考老夫另外一篇分享[了解 MIME 类型：Web 开发中的重要概念](https://juejin.cn/post/7340286503505592330)\n4. 实体头部（Entity Headers）：描述请求或响应的主体内容，如：Content-Encoding,Content-Language，Content-Disposition。\n\n## HTTP消息头的常见字段\n+ Cache-Control：控制缓存行为。\n+ Content-Type：指定消息主体的媒体类型。\n+ Content-Length：指定消息主体的长度。\n+ Host：指定服务器的主机名和端口号。\n+ User-Agent：客户端标识，描述客户端的软件和操作系统信息。\n+ Server：服务器标识，描述服务器的软件和操作系统信息。\n\n其他字段的含义就不在这里赘述了，感兴趣的老铁可以移步[HTTP头字段](https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-29)\n\n## HTTP消息头的使用场景\n### 控制缓存行为：Cache-Control\n假设你正在开发一个新闻网站，用户可以浏览最新的新闻文章。为了提高网站的性能和用户体验，你想要利用缓存来减少服务器的负载并加快页面加载速度。\n\n在这种情况下，你可以使用 Cache-Control 和 Last-Modified（或 ETag）头部来控制新闻文章页面的缓存行为。当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部。如果用户再次访问相同的文章，客户端可以根据这些头部来决定是否使用缓存。\n具体地，你可以采取以下步骤：\n1. 当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部：\n```http request\nHTTP/1.1 200 OK\nContent-Type: text/html\nCache-Control: max-age=3600\nLast-Modified: Mon, 25 Jan 2024 12:00:00 GMT\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>News Article</title>\n</head>\n<body>\n    <h1>Breaking News!</h1>\n    <p>This is the latest news article.</p>\n</body>\n</html>\n```\n2. 当用户再次访问相同的文章时，客户端可以向服务器发送条件请求，检查文章是否发生了变化：\n```http request\nGET /news/article?id=123 HTTP/1.1\nHost: example.com\nIf-Modified-Since: Mon, 25 Jan 2024 12:00:00 GMT\n```\n3. 如果文章未发生变化，服务器可以返回一个 304 Not Modified 响应，表示文章仍然有效，客户端可以使用缓存：\n```http request\nHTTP/1.1 304 Not Modified\n```\n\n### 控制消息的传输和连接行为\n考虑一个在线文件传输服务的实际场景。在这个服务中，用户可以上传文件到服务器，并且可以从服务器下载已经上传的文件。为了实现更好的用户体验和系统性能，我们需要控制消息的传输和连接行为。\n1. 上传文件请求\n   当用户上传文件时，客户端会向服务器发送上传请求，并将文件数据通过 POST 请求发送给服务器。为了控制消息的传输，我们可以使用流式传输（Streaming）来逐块地上传文件，而不是一次性发送整个文件。\n```http request\nPOST /upload HTTP/1.1\nHost: example.com\nContent-Type: application/octet-stream\nContent-Length: <length_of_file_data>\n\n<file_data_chunk>\n```\n\n2. 处理上传请求\n   服务器收到上传文件的请求后，会逐块地接收文件数据，并将其写入到文件系统中的临时文件中。在处理上传请求时，我们需要控制连接的持续性，以便及时释放服务器资源并提高系统的并发性能。\n3. 上传完成响应\n   当文件上传完成时，服务器会向客户端发送上传成功的响应，并包含上传文件的元数据信息，如文件名、大小等。在响应中，我们可以设置连接头部为 Connection: close，表示该请求处理完毕后，关闭连接。\n```http request\nHTTP/1.1 200 OK\nContent-Type: application/json\nConnection: close\n\n{\"status\": \"success\", \"filename\": \"example.txt\", \"size\": 1024}\n```\n\n## 可扩展性\nHTTP 消息头很好的体现了HTTP协议的可扩展性，这使得它可以适应各种不同的应用场景和需求。以下是 HTTP 消息头可扩展性的几个方面：\n\n### 自定义消息头\nHTTP 协议允许开发者自定义消息头，以满足特定应用程序的需求。这意味着开发者可以定义自己的消息头字段，并在请求和响应中使用它们来传递特定的元数据信息。\n\n```http request\nPOST /vab-mock-server/api/summary/site-summary/8/tenant-grid HTTP/1.1\n...\naccessToken: admin-accessToken\nx-bpm-saasops-token: grwekVGIWIjAIFqRHILI1A==\n```\n上面的例子我们看到，请求头的最后两个属性[accessToken]和[x-bpm-saasops-token]就都是根据业务自定义的两个属性\n### 标准扩展头\nHTTP 协议规范定期更新，并不断添加新的标准消息头字段，以满足日益增长的网络通信需求。例如，HTTP/2 引入了一些新的标准头部，如 :authority 和 :method 等，用于支持新的协议功能。\n\n当谈到扩展标准消息头时，一个很好的例子是 Accept 消息头。Accept 消息头用于指示客户端所能接受的响应内容类型。通常情况下，它包含一个或多个媒体类型（MIME 类型）和相应的优先级。\n\n例如，一个客户端可以发送如下的 Accept 消息头：\n```\nAccept: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8\n```\n在这个例子中，客户端指示它可以接受 text/html、application/xhtml+xml 和 application/xml 类型的响应内容，并为它们设置了不同的优先级。这种设置允许客户端灵活地控制服务器返回的响应类型，根据客户端的需求和偏好进行适当的选择。\n\n### 消息头参数化\n部分消息头支持参数化，允许在消息头中传递额外的参数信息。例如：\n\n假设服务器要向客户端传送一个名为 \"document.pdf\" 的 PDF 文件，并且希望客户端将该文件保存到本地而不是直接在浏览器中打开。服务器可以通过设置 Content-Disposition 消息头来指示客户端的行为。下面是服务器可能返回的响应头部分：\n```http request\nContent-Disposition: attachment; filename=\"document.pdf\"\n```\n在这个例子中，Content-Disposition 消息头的值是 \"attachment\"，表示该响应中包含的是一个附件文件。另外，通过 filename 参数指定了文件名为 \"document.pdf\"，这样客户端就知道该附件应该以什么名字保存。\n当客户端收到这个响应时，会根据 Content-Disposition 消息头的指示，将响应中的内容保存为一个名为 \"document.pdf\" 的文件，而不是尝试在浏览器中打开它。这样，服务器可以控制客户端对响应的处理方式，实现了更灵活的消息传递和处理。\n\n### 条件请求头\n条件请求头允许客户端在发送请求时附加条件，以控制服务器的行为。\n这一点可以参考上面[控制缓存行为：Cache-Control](#控制缓存行为：Cache-Control)\n\n\n\n## 结语\n其实关于HTTP消息头还有很多知识点本文没有讲到。本文的介绍，姑且算是入门指引吧。从基础知识到应用场景，希望能够帮助读者更好地理解和应用 HTTP 协议。在实际开发中，合理利用 HTTP 协议能够提升 Web 应用的性能和安全性。","slug":"http","published":1,"updated":"2024-03-21T08:46:23.765Z","_id":"cltzedeaa0000d0p1ajbjc7gt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>HTTP（Hypertext Transfer Protocol）是现代网络通信的基础，它通过消息头来传递关键信息，从而实现客户端和服务器之间的通信。在本文中，我们将探讨 HTTP 消息头的作用、结构以及常见的使用方式，并通过详细的代码例子来说明。</p>\n<p>在开始本文的阅读之前，默认屏幕前的老铁已经对HTTP有了基础的认识。如果不是，请移步学习<a href=\"https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#\">超文本传输协议</a></p>\n<h2 id=\"什么是HTTP消息头：协议中的精华\"><a href=\"#什么是HTTP消息头：协议中的精华\" class=\"headerlink\" title=\"什么是HTTP消息头：协议中的精华\"></a>什么是HTTP消息头：协议中的精华</h2><p>HTTP 消息头是 HTTP 报文中的一部分，它包含了一系列键值对，用于描述报文的属性和特征。每个键值对被称为一个消息头字段，其中键是字段名，值是字段值，它们由一个冒号（:）分隔。消息头字段通常用于控制缓存、身份验证、内容协商、内容类型、内容编码等方面的行为。</p>\n<h2 id=\"HTTP-消息头的类型\"><a href=\"#HTTP-消息头的类型\" class=\"headerlink\" title=\"HTTP 消息头的类型\"></a>HTTP 消息头的类型</h2><p>HTTP 消息头由若干个字段组成，每个字段占据一行，以 CRLF（Carriage Return Line Feed）作为分隔符。通常，消息头分为请求头和响应头两种类型。请求头出现在客户端发送的 HTTP 请求中，而响应头出现在服务器返回的 HTTP 响应中。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>keep-alive</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>1823</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua</span><span class=\"punctuation\">: </span>&quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;122&quot;</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua-platform</span><span class=\"punctuation\">: </span>&quot;Windows&quot;</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua-mobile</span><span class=\"punctuation\">: </span>?0</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>*/*</span><br><span class=\"line\"><span class=\"attribute\">Origin</span><span class=\"punctuation\">: </span>https://www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Site</span><span class=\"punctuation\">: </span>cross-site</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Mode</span><span class=\"punctuation\">: </span>cors</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Dest</span><span class=\"punctuation\">: </span>empty</span><br><span class=\"line\"><span class=\"attribute\">Referer</span><span class=\"punctuation\">: </span>https://www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate, br, zstd</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>通用头部（General Headers）：适用于请求和响应的通用头部，如：Cache-Control、Connection、Date、Pragma、Trailer。</li>\n<li>请求头部（Request Headers）：出现在 HTTP 请求中，描述客户端的信息和请求的属性，如：Host，User-Agent，Accept，Authorization。</li>\n<li>响应头部（Response Headers）：出现在 HTTP 响应中，描述服务器的信息和响应的属性，如：Content-Type,Content-Length，Location,Server。<blockquote>\n<p>关于响应头里面的类型也可以参考老夫另外一篇分享<a href=\"https://juejin.cn/post/7340286503505592330\">了解 MIME 类型：Web 开发中的重要概念</a></p>\n</blockquote>\n</li>\n<li>实体头部（Entity Headers）：描述请求或响应的主体内容，如：Content-Encoding,Content-Language，Content-Disposition。</li>\n</ol>\n<h2 id=\"HTTP消息头的常见字段\"><a href=\"#HTTP消息头的常见字段\" class=\"headerlink\" title=\"HTTP消息头的常见字段\"></a>HTTP消息头的常见字段</h2><ul>\n<li>Cache-Control：控制缓存行为。</li>\n<li>Content-Type：指定消息主体的媒体类型。</li>\n<li>Content-Length：指定消息主体的长度。</li>\n<li>Host：指定服务器的主机名和端口号。</li>\n<li>User-Agent：客户端标识，描述客户端的软件和操作系统信息。</li>\n<li>Server：服务器标识，描述服务器的软件和操作系统信息。</li>\n</ul>\n<p>其他字段的含义就不在这里赘述了，感兴趣的老铁可以移步<a href=\"https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-29\">HTTP头字段</a></p>\n<h2 id=\"HTTP消息头的使用场景\"><a href=\"#HTTP消息头的使用场景\" class=\"headerlink\" title=\"HTTP消息头的使用场景\"></a>HTTP消息头的使用场景</h2><h3 id=\"控制缓存行为：Cache-Control\"><a href=\"#控制缓存行为：Cache-Control\" class=\"headerlink\" title=\"控制缓存行为：Cache-Control\"></a>控制缓存行为：Cache-Control</h3><p>假设你正在开发一个新闻网站，用户可以浏览最新的新闻文章。为了提高网站的性能和用户体验，你想要利用缓存来减少服务器的负载并加快页面加载速度。</p>\n<p>在这种情况下，你可以使用 Cache-Control 和 Last-Modified（或 ETag）头部来控制新闻文章页面的缓存行为。当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部。如果用户再次访问相同的文章，客户端可以根据这些头部来决定是否使用缓存。<br>具体地，你可以采取以下步骤：</p>\n<ol>\n<li>当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>max-age=3600</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span><span class=\"punctuation\">: </span>Mon, 25 Jan 2024 12:00:00 GMT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>News Article<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Breaking News!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is the latest news article.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n<li>当用户再次访问相同的文章时，客户端可以向服务器发送条件请求，检查文章是否发生了变化：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/news/article?id=123</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>example.com</span><br><span class=\"line\"><span class=\"attribute\">If-Modified-Since</span><span class=\"punctuation\">: </span>Mon, 25 Jan 2024 12:00:00 GMT</span><br></pre></td></tr></table></figure></li>\n<li>如果文章未发生变化，服务器可以返回一个 304 Not Modified 响应，表示文章仍然有效，客户端可以使用缓存：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">304</span> Not Modified</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"控制消息的传输和连接行为\"><a href=\"#控制消息的传输和连接行为\" class=\"headerlink\" title=\"控制消息的传输和连接行为\"></a>控制消息的传输和连接行为</h3><p>考虑一个在线文件传输服务的实际场景。在这个服务中，用户可以上传文件到服务器，并且可以从服务器下载已经上传的文件。为了实现更好的用户体验和系统性能，我们需要控制消息的传输和连接行为。</p>\n<ol>\n<li><p>上传文件请求<br>当用户上传文件时，客户端会向服务器发送上传请求，并将文件数据通过 POST 请求发送给服务器。为了控制消息的传输，我们可以使用流式传输（Streaming）来逐块地上传文件，而不是一次性发送整个文件。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/upload</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>example.com</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/octet-stream</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>&lt;length_of_file_data&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-apache\"><span class=\"section\">&lt;file_data_chunk&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>处理上传请求<br>服务器收到上传文件的请求后，会逐块地接收文件数据，并将其写入到文件系统中的临时文件中。在处理上传请求时，我们需要控制连接的持续性，以便及时释放服务器资源并提高系统的并发性能。</p>\n</li>\n<li><p>上传完成响应<br>当文件上传完成时，服务器会向客户端发送上传成功的响应，并包含上传文件的元数据信息，如文件名、大小等。在响应中，我们可以设置连接头部为 Connection: close，表示该请求处理完毕后，关闭连接。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-json\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;status&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;success&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;filename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;example.txt&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1024</span><span class=\"punctuation\">&#125;</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"可扩展性\"><a href=\"#可扩展性\" class=\"headerlink\" title=\"可扩展性\"></a>可扩展性</h2><p>HTTP 消息头很好的体现了HTTP协议的可扩展性，这使得它可以适应各种不同的应用场景和需求。以下是 HTTP 消息头可扩展性的几个方面：</p>\n<h3 id=\"自定义消息头\"><a href=\"#自定义消息头\" class=\"headerlink\" title=\"自定义消息头\"></a>自定义消息头</h3><p>HTTP 协议允许开发者自定义消息头，以满足特定应用程序的需求。这意味着开发者可以定义自己的消息头字段，并在请求和响应中使用它们来传递特定的元数据信息。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/vab-mock-server/api/summary/site-summary/8/tenant-grid</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attribute\">accessToken</span><span class=\"punctuation\">: </span>admin-accessToken</span><br><span class=\"line\"><span class=\"attribute\">x-bpm-saasops-token</span><span class=\"punctuation\">: </span>grwekVGIWIjAIFqRHILI1A==</span><br></pre></td></tr></table></figure>\n<p>上面的例子我们看到，请求头的最后两个属性[accessToken]和[x-bpm-saasops-token]就都是根据业务自定义的两个属性</p>\n<h3 id=\"标准扩展头\"><a href=\"#标准扩展头\" class=\"headerlink\" title=\"标准扩展头\"></a>标准扩展头</h3><p>HTTP 协议规范定期更新，并不断添加新的标准消息头字段，以满足日益增长的网络通信需求。例如，HTTP&#x2F;2 引入了一些新的标准头部，如 :authority 和 :method 等，用于支持新的协议功能。</p>\n<p>当谈到扩展标准消息头时，一个很好的例子是 Accept 消息头。Accept 消息头用于指示客户端所能接受的响应内容类型。通常情况下，它包含一个或多个媒体类型（MIME 类型）和相应的优先级。</p>\n<p>例如，一个客户端可以发送如下的 Accept 消息头：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Accept: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8</span><br></pre></td></tr></table></figure>\n<p>在这个例子中，客户端指示它可以接受 text&#x2F;html、application&#x2F;xhtml+xml 和 application&#x2F;xml 类型的响应内容，并为它们设置了不同的优先级。这种设置允许客户端灵活地控制服务器返回的响应类型，根据客户端的需求和偏好进行适当的选择。</p>\n<h3 id=\"消息头参数化\"><a href=\"#消息头参数化\" class=\"headerlink\" title=\"消息头参数化\"></a>消息头参数化</h3><p>部分消息头支持参数化，允许在消息头中传递额外的参数信息。例如：</p>\n<p>假设服务器要向客户端传送一个名为 “document.pdf” 的 PDF 文件，并且希望客户端将该文件保存到本地而不是直接在浏览器中打开。服务器可以通过设置 Content-Disposition 消息头来指示客户端的行为。下面是服务器可能返回的响应头部分：</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Disposition</span><span class=\"punctuation\">: </span>attachment; filename=&quot;document.pdf&quot;</span><br></pre></td></tr></table></figure>\n<p>在这个例子中，Content-Disposition 消息头的值是 “attachment”，表示该响应中包含的是一个附件文件。另外，通过 filename 参数指定了文件名为 “document.pdf”，这样客户端就知道该附件应该以什么名字保存。<br>当客户端收到这个响应时，会根据 Content-Disposition 消息头的指示，将响应中的内容保存为一个名为 “document.pdf” 的文件，而不是尝试在浏览器中打开它。这样，服务器可以控制客户端对响应的处理方式，实现了更灵活的消息传递和处理。</p>\n<h3 id=\"条件请求头\"><a href=\"#条件请求头\" class=\"headerlink\" title=\"条件请求头\"></a>条件请求头</h3><p>条件请求头允许客户端在发送请求时附加条件，以控制服务器的行为。<br>这一点可以参考上面<a href=\"#%E6%8E%A7%E5%88%B6%E7%BC%93%E5%AD%98%E8%A1%8C%E4%B8%BA%EF%BC%9ACache-Control\">控制缓存行为：Cache-Control</a></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>其实关于HTTP消息头还有很多知识点本文没有讲到。本文的介绍，姑且算是入门指引吧。从基础知识到应用场景，希望能够帮助读者更好地理解和应用 HTTP 协议。在实际开发中，合理利用 HTTP 协议能够提升 Web 应用的性能和安全性。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>HTTP（Hypertext Transfer Protocol）是现代网络通信的基础，它通过消息头来传递关键信息，从而实现客户端和服务器之间的通信。在本文中，我们将探讨 HTTP 消息头的作用、结构以及常见的使用方式，并通过详细的代码例子来说明。</p>\n<p>在开始本文的阅读之前，默认屏幕前的老铁已经对HTTP有了基础的认识。如果不是，请移步学习<a href=\"https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#\">超文本传输协议</a></p>\n<h2 id=\"什么是HTTP消息头：协议中的精华\"><a href=\"#什么是HTTP消息头：协议中的精华\" class=\"headerlink\" title=\"什么是HTTP消息头：协议中的精华\"></a>什么是HTTP消息头：协议中的精华</h2><p>HTTP 消息头是 HTTP 报文中的一部分，它包含了一系列键值对，用于描述报文的属性和特征。每个键值对被称为一个消息头字段，其中键是字段名，值是字段值，它们由一个冒号（:）分隔。消息头字段通常用于控制缓存、身份验证、内容协商、内容类型、内容编码等方面的行为。</p>\n<h2 id=\"HTTP-消息头的类型\"><a href=\"#HTTP-消息头的类型\" class=\"headerlink\" title=\"HTTP 消息头的类型\"></a>HTTP 消息头的类型</h2><p>HTTP 消息头由若干个字段组成，每个字段占据一行，以 CRLF（Carriage Return Line Feed）作为分隔符。通常，消息头分为请求头和响应头两种类型。请求头出现在客户端发送的 HTTP 请求中，而响应头出现在服务器返回的 HTTP 响应中。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>keep-alive</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>1823</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua</span><span class=\"punctuation\">: </span>&quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;122&quot;</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua-platform</span><span class=\"punctuation\">: </span>&quot;Windows&quot;</span><br><span class=\"line\"><span class=\"attribute\">sec-ch-ua-mobile</span><span class=\"punctuation\">: </span>?0</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>*/*</span><br><span class=\"line\"><span class=\"attribute\">Origin</span><span class=\"punctuation\">: </span>https://www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Site</span><span class=\"punctuation\">: </span>cross-site</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Mode</span><span class=\"punctuation\">: </span>cors</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Dest</span><span class=\"punctuation\">: </span>empty</span><br><span class=\"line\"><span class=\"attribute\">Referer</span><span class=\"punctuation\">: </span>https://www.itprohub.site</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate, br, zstd</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>通用头部（General Headers）：适用于请求和响应的通用头部，如：Cache-Control、Connection、Date、Pragma、Trailer。</li>\n<li>请求头部（Request Headers）：出现在 HTTP 请求中，描述客户端的信息和请求的属性，如：Host，User-Agent，Accept，Authorization。</li>\n<li>响应头部（Response Headers）：出现在 HTTP 响应中，描述服务器的信息和响应的属性，如：Content-Type,Content-Length，Location,Server。<blockquote>\n<p>关于响应头里面的类型也可以参考老夫另外一篇分享<a href=\"https://juejin.cn/post/7340286503505592330\">了解 MIME 类型：Web 开发中的重要概念</a></p>\n</blockquote>\n</li>\n<li>实体头部（Entity Headers）：描述请求或响应的主体内容，如：Content-Encoding,Content-Language，Content-Disposition。</li>\n</ol>\n<h2 id=\"HTTP消息头的常见字段\"><a href=\"#HTTP消息头的常见字段\" class=\"headerlink\" title=\"HTTP消息头的常见字段\"></a>HTTP消息头的常见字段</h2><ul>\n<li>Cache-Control：控制缓存行为。</li>\n<li>Content-Type：指定消息主体的媒体类型。</li>\n<li>Content-Length：指定消息主体的长度。</li>\n<li>Host：指定服务器的主机名和端口号。</li>\n<li>User-Agent：客户端标识，描述客户端的软件和操作系统信息。</li>\n<li>Server：服务器标识，描述服务器的软件和操作系统信息。</li>\n</ul>\n<p>其他字段的含义就不在这里赘述了，感兴趣的老铁可以移步<a href=\"https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-29\">HTTP头字段</a></p>\n<h2 id=\"HTTP消息头的使用场景\"><a href=\"#HTTP消息头的使用场景\" class=\"headerlink\" title=\"HTTP消息头的使用场景\"></a>HTTP消息头的使用场景</h2><h3 id=\"控制缓存行为：Cache-Control\"><a href=\"#控制缓存行为：Cache-Control\" class=\"headerlink\" title=\"控制缓存行为：Cache-Control\"></a>控制缓存行为：Cache-Control</h3><p>假设你正在开发一个新闻网站，用户可以浏览最新的新闻文章。为了提高网站的性能和用户体验，你想要利用缓存来减少服务器的负载并加快页面加载速度。</p>\n<p>在这种情况下，你可以使用 Cache-Control 和 Last-Modified（或 ETag）头部来控制新闻文章页面的缓存行为。当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部。如果用户再次访问相同的文章，客户端可以根据这些头部来决定是否使用缓存。<br>具体地，你可以采取以下步骤：</p>\n<ol>\n<li>当用户首次访问新闻文章时，服务器会发送文章内容以及相关的缓存控制头部：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>max-age=3600</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span><span class=\"punctuation\">: </span>Mon, 25 Jan 2024 12:00:00 GMT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>News Article<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Breaking News!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is the latest news article.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n<li>当用户再次访问相同的文章时，客户端可以向服务器发送条件请求，检查文章是否发生了变化：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/news/article?id=123</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>example.com</span><br><span class=\"line\"><span class=\"attribute\">If-Modified-Since</span><span class=\"punctuation\">: </span>Mon, 25 Jan 2024 12:00:00 GMT</span><br></pre></td></tr></table></figure></li>\n<li>如果文章未发生变化，服务器可以返回一个 304 Not Modified 响应，表示文章仍然有效，客户端可以使用缓存：<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">304</span> Not Modified</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"控制消息的传输和连接行为\"><a href=\"#控制消息的传输和连接行为\" class=\"headerlink\" title=\"控制消息的传输和连接行为\"></a>控制消息的传输和连接行为</h3><p>考虑一个在线文件传输服务的实际场景。在这个服务中，用户可以上传文件到服务器，并且可以从服务器下载已经上传的文件。为了实现更好的用户体验和系统性能，我们需要控制消息的传输和连接行为。</p>\n<ol>\n<li><p>上传文件请求<br>当用户上传文件时，客户端会向服务器发送上传请求，并将文件数据通过 POST 请求发送给服务器。为了控制消息的传输，我们可以使用流式传输（Streaming）来逐块地上传文件，而不是一次性发送整个文件。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/upload</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>example.com</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/octet-stream</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>&lt;length_of_file_data&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-apache\"><span class=\"section\">&lt;file_data_chunk&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>处理上传请求<br>服务器收到上传文件的请求后，会逐块地接收文件数据，并将其写入到文件系统中的临时文件中。在处理上传请求时，我们需要控制连接的持续性，以便及时释放服务器资源并提高系统的并发性能。</p>\n</li>\n<li><p>上传完成响应<br>当文件上传完成时，服务器会向客户端发送上传成功的响应，并包含上传文件的元数据信息，如文件名、大小等。在响应中，我们可以设置连接头部为 Connection: close，表示该请求处理完毕后，关闭连接。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-json\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;status&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;success&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;filename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;example.txt&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1024</span><span class=\"punctuation\">&#125;</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"可扩展性\"><a href=\"#可扩展性\" class=\"headerlink\" title=\"可扩展性\"></a>可扩展性</h2><p>HTTP 消息头很好的体现了HTTP协议的可扩展性，这使得它可以适应各种不同的应用场景和需求。以下是 HTTP 消息头可扩展性的几个方面：</p>\n<h3 id=\"自定义消息头\"><a href=\"#自定义消息头\" class=\"headerlink\" title=\"自定义消息头\"></a>自定义消息头</h3><p>HTTP 协议允许开发者自定义消息头，以满足特定应用程序的需求。这意味着开发者可以定义自己的消息头字段，并在请求和响应中使用它们来传递特定的元数据信息。</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/vab-mock-server/api/summary/site-summary/8/tenant-grid</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attribute\">accessToken</span><span class=\"punctuation\">: </span>admin-accessToken</span><br><span class=\"line\"><span class=\"attribute\">x-bpm-saasops-token</span><span class=\"punctuation\">: </span>grwekVGIWIjAIFqRHILI1A==</span><br></pre></td></tr></table></figure>\n<p>上面的例子我们看到，请求头的最后两个属性[accessToken]和[x-bpm-saasops-token]就都是根据业务自定义的两个属性</p>\n<h3 id=\"标准扩展头\"><a href=\"#标准扩展头\" class=\"headerlink\" title=\"标准扩展头\"></a>标准扩展头</h3><p>HTTP 协议规范定期更新，并不断添加新的标准消息头字段，以满足日益增长的网络通信需求。例如，HTTP&#x2F;2 引入了一些新的标准头部，如 :authority 和 :method 等，用于支持新的协议功能。</p>\n<p>当谈到扩展标准消息头时，一个很好的例子是 Accept 消息头。Accept 消息头用于指示客户端所能接受的响应内容类型。通常情况下，它包含一个或多个媒体类型（MIME 类型）和相应的优先级。</p>\n<p>例如，一个客户端可以发送如下的 Accept 消息头：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Accept: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8</span><br></pre></td></tr></table></figure>\n<p>在这个例子中，客户端指示它可以接受 text&#x2F;html、application&#x2F;xhtml+xml 和 application&#x2F;xml 类型的响应内容，并为它们设置了不同的优先级。这种设置允许客户端灵活地控制服务器返回的响应类型，根据客户端的需求和偏好进行适当的选择。</p>\n<h3 id=\"消息头参数化\"><a href=\"#消息头参数化\" class=\"headerlink\" title=\"消息头参数化\"></a>消息头参数化</h3><p>部分消息头支持参数化，允许在消息头中传递额外的参数信息。例如：</p>\n<p>假设服务器要向客户端传送一个名为 “document.pdf” 的 PDF 文件，并且希望客户端将该文件保存到本地而不是直接在浏览器中打开。服务器可以通过设置 Content-Disposition 消息头来指示客户端的行为。下面是服务器可能返回的响应头部分：</p>\n<figure class=\"highlight http\"><figcaption><span>request</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Disposition</span><span class=\"punctuation\">: </span>attachment; filename=&quot;document.pdf&quot;</span><br></pre></td></tr></table></figure>\n<p>在这个例子中，Content-Disposition 消息头的值是 “attachment”，表示该响应中包含的是一个附件文件。另外，通过 filename 参数指定了文件名为 “document.pdf”，这样客户端就知道该附件应该以什么名字保存。<br>当客户端收到这个响应时，会根据 Content-Disposition 消息头的指示，将响应中的内容保存为一个名为 “document.pdf” 的文件，而不是尝试在浏览器中打开它。这样，服务器可以控制客户端对响应的处理方式，实现了更灵活的消息传递和处理。</p>\n<h3 id=\"条件请求头\"><a href=\"#条件请求头\" class=\"headerlink\" title=\"条件请求头\"></a>条件请求头</h3><p>条件请求头允许客户端在发送请求时附加条件，以控制服务器的行为。<br>这一点可以参考上面<a href=\"#%E6%8E%A7%E5%88%B6%E7%BC%93%E5%AD%98%E8%A1%8C%E4%B8%BA%EF%BC%9ACache-Control\">控制缓存行为：Cache-Control</a></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>其实关于HTTP消息头还有很多知识点本文没有讲到。本文的介绍，姑且算是入门指引吧。从基础知识到应用场景，希望能够帮助读者更好地理解和应用 HTTP 协议。在实际开发中，合理利用 HTTP 协议能够提升 Web 应用的性能和安全性。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cltzedeaa0000d0p1ajbjc7gt","tag_id":"cltzedeah0001d0p1gd2rdzoo","_id":"cltzedeai0002d0p112r4352r"}],"Tag":[{"name":"http 协议 http协议","_id":"cltzedeah0001d0p1gd2rdzoo"}]}}